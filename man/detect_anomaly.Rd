% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r_detect.R
\name{detect_anomaly}
\alias{detect_anomaly}
\title{Anomaly detection after conducting specific algorithm}
\usage{
detect_anomaly(y, win, jump, thr, label = c(TRUE, FALSE))
}
\arguments{
\item{y}{NumericVector result of anomaly detection algorithm.}

\item{win}{int window size for sliding window.}

\item{jump}{int jump size for sliding window.}

\item{thr}{threshold for anomaly detection, in each window}

\item{label}{vector represents anomaly and normal. By default, TRUE and FALSE, respectively.}
}
\value{
LogicalVector,
If NND is (strictly) larger than threshold then TRUE.
Otherwise, FALSE
}
\description{
This function detects anomaly based on result vector.
}
\details{
Large NND represents distinct pattern from the other windows.
Given pre-specified threshold \eqn{t}, we find the points such that
\deqn{d_i > t}
If at least one point in the window is determined to be an anomaly, this function will output the whole window as anomaly.
}
\references{
Filonov, P., Kitashov, F., & Lavrentyev, A. (2017). \emph{RNN-based Early Cyber-Attack Detection for the Tennessee Eastman Process}. CoRR.

Yun, J.-H., Hwang, Y., Lee, W., Ahn, H.-K., & Kim, S.-K. (2018). \emph{Statistical Similarity of Critical Infrastructure Network Traffic Based on Nearest Neighbor Distances} (Vol. 11050, pp. 1â€“23). Presented at the Research in Attacks, Intrusions, and Defenses, Cham: Springer International Publishing. \url{http://doi.org/10.1007/978-3-030-00470-5_27}
}
\seealso{
\code{\link{nns_cpp}}
    \code{\link{kl_fix}}
    \code{\link{kl_dynamic}}
}
