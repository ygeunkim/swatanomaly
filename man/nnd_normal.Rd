% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{nnd_normal}
\alias{nnd_normal}
\title{Compute NND of normal data given window distance function}
\usage{
nnd_normal(data, part, win, jump, d, display_progress = FALSE)
}
\arguments{
\item{data}{NumericMatrix. data to be calculated NND.}

\item{part}{int. the number of partition.}

\item{win}{int. window size.}

\item{jump}{int. shift size.}

\item{d}{Function. distance function. By default, \code{\link{compute_euc}}. Arguments must be two matrices and the output double.}

\item{display_progress}{If TRUE, display a progress bar. By default, FALSE.}
}
\value{
NumericVector. NND for each window. Its size is affected by "jump".
}
\description{
This function computes NND of a normal data set corresponding to defined window distance.
}
\details{
First partition the whole given data set by "part".
Without the loss of generality, consider the first window.
We do not compute the distances between windows in the same window, assuming they are similar to each other.
Then for the first window, we consider every other slided window in the other partion.
Compute their distances. The minimum among the distance values is NND of the first window.
Repeat this procedure for every window in the partition.
Same for the other partition.
}
